/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // use the address signal to send the load to the appropriate register
    DMux8Way(in= load, sel= address, a= R0, b= R1, 
    c= R2, d= R3, e= R4, f= R5, g= R6, h= R7);

    // load goes to the appropriate register
    // input signal fed in to all registers simultaneously
    Register(in= in, load= R0, out= out0);
    Register(in= in, load= R1, out= out1);
    Register(in= in, load= R2, out= out2);
    Register(in= in, load= R3, out= out3);
    Register(in= in, load= R4, out= out4);
    Register(in= in, load= R5, out= out5);
    Register(in= in, load= R6, out= out6);
    Register(in= in, load= R7, out= out7);

    // use the address input to select the output from the desired register
    Mux8Way16(a= out0, b= out1, c= out2, d= out3, 
    e= out4, f= out5, g= out6, h= out7, sel= address, out= out);    
}